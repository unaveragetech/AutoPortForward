name: Pylint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'  # Specify the Python version (can be changed)

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint

    - name: Run Pylint with multiple versions
      run: |
        # Define a list of Pylint versions to run sequentially
        pylint_versions=("2.13.0" "2.14.0" "2.15.0")  # Add your desired versions here
        
        # Create the reports directory
        mkdir -p pylint-reports

        # Run Pylint for each version sequentially
        for pylint_version in "${pylint_versions[@]}"; do
          # Install the specific version of Pylint
          pip install pylint==$pylint_version

          # Capture the pylint version to use in filenames
          echo "Running Pylint $pylint_version"

          # Iterate over all Python files and generate Pylint reports
          for file in $(git ls-files '*.py'); do
            score=$(pylint --disable=all --enable=error,warning --output-format=text "$file" | tee "pylint-reports/${file//\//_}_${pylint_version}_score.txt" | tail -n 1 | awk '{print $1}')
            echo "Score for $file with Pylint $pylint_version: $score"
          done
        done

    - name: Commit and push pylint reports to repo
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        
        git add pylint-reports/
        git commit -m "Add/Update Pylint reports with multiple versions"
        git push
